//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DNEScrypt.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class DNEScryptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, True=6, False=7, Var=8, Equals=9, 
		Underscore=10, Add=11, Increment=12, Minus=13, Decrement=14, Multiply=15, 
		Divide=16, LeftParenthesis=17, RightParenthesis=18, Dot=19, And=20, Or=21, 
		Not=22, DivideEquals=23, SubEquals=24, MultiplyEquals=25, AddEquals=26, 
		DoubleEquals=27, NotEquals=28, LessOrEqual=29, GreaterOrEqual=30, GreaterThan=31, 
		LessThan=32, Null=33, Id=34, Number=35, String=36, WhiteSpace=37;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "True", "False", "Var", "Equals", 
		"Digit", "Letter", "Underscore", "Add", "Increment", "Minus", "Decrement", 
		"Multiply", "Divide", "LeftParenthesis", "RightParenthesis", "Dot", "And", 
		"Or", "Not", "DivideEquals", "SubEquals", "MultiplyEquals", "AddEquals", 
		"DoubleEquals", "NotEquals", "LessOrEqual", "GreaterOrEqual", "GreaterThan", 
		"LessThan", "Null", "Id", "Number", "String", "WhiteSpace"
	};


	public DNEScryptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DNEScryptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'{'", "'}'", "'if'", "'else'", "'true'", "'false'", "'var'", 
		"'='", "'_'", "'+'", "'++'", "'-'", "'--'", "'*'", "'/'", "'('", "')'", 
		"'.'", "'&&'", "'||'", "'!'", "'/='", "'-='", "'*='", "'+='", "'=='", 
		"'!='", "'<='", "'>='", "'>'", "'<'", "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, "True", "False", "Var", "Equals", 
		"Underscore", "Add", "Increment", "Minus", "Decrement", "Multiply", "Divide", 
		"LeftParenthesis", "RightParenthesis", "Dot", "And", "Or", "Not", "DivideEquals", 
		"SubEquals", "MultiplyEquals", "AddEquals", "DoubleEquals", "NotEquals", 
		"LessOrEqual", "GreaterOrEqual", "GreaterThan", "LessThan", "Null", "Id", 
		"Number", "String", "WhiteSpace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DNEScrypt.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DNEScryptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\'', '\xDF', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x3', '\x2', 
		'\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1A', '\x3', 
		'\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', 
		'\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', 
		'\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', '\x1F', '\x3', 
		' ', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', 
		'\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', '$', '\x3', '$', '\x3', 
		'$', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', '%', '\x5', '%', '\xB6', 
		'\n', '%', '\x3', '%', '\x3', '%', '\x3', '%', '\a', '%', '\xBB', '\n', 
		'%', '\f', '%', '\xE', '%', '\xBE', '\v', '%', '\x3', '&', '\x6', '&', 
		'\xC1', '\n', '&', '\r', '&', '\xE', '&', '\xC2', '\x3', '&', '\x3', '&', 
		'\a', '&', '\xC7', '\n', '&', '\f', '&', '\xE', '&', '\xCA', '\v', '&', 
		'\x5', '&', '\xCC', '\n', '&', '\x3', '\'', '\x3', '\'', '\x3', '\'', 
		'\x3', '\'', '\a', '\'', '\xD2', '\n', '\'', '\f', '\'', '\xE', '\'', 
		'\xD5', '\v', '\'', '\x3', '\'', '\x3', '\'', '\x3', '(', '\x6', '(', 
		'\xDA', '\n', '(', '\r', '(', '\xE', '(', '\xDB', '\x3', '(', '\x3', '(', 
		'\x2', '\x2', ')', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', 
		'\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', 
		'\x2', '\x17', '\x2', '\x19', '\f', '\x1B', '\r', '\x1D', '\xE', '\x1F', 
		'\xF', '!', '\x10', '#', '\x11', '%', '\x12', '\'', '\x13', ')', '\x14', 
		'+', '\x15', '-', '\x16', '/', '\x17', '\x31', '\x18', '\x33', '\x19', 
		'\x35', '\x1A', '\x37', '\x1B', '\x39', '\x1C', ';', '\x1D', '=', '\x1E', 
		'?', '\x1F', '\x41', ' ', '\x43', '!', '\x45', '\"', 'G', '#', 'I', '$', 
		'K', '%', 'M', '&', 'O', '\'', '\x3', '\x2', '\b', '\x3', '\x2', '\x32', 
		';', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x3', '\x2', '$', '$', 
		'\x6', '\x2', '\f', '\f', '\xF', '\xF', '$', '$', '^', '^', '\x4', '\x2', 
		'\f', '\f', '\xF', '\xF', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x2', '\xE6', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', '=', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', '\x2', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x43', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x45', '\x3', '\x2', '\x2', '\x2', '\x2', 'G', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'I', '\x3', '\x2', '\x2', '\x2', '\x2', 'K', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'M', '\x3', '\x2', '\x2', '\x2', '\x2', 'O', '\x3', '\x2', 
		'\x2', '\x2', '\x3', 'Q', '\x3', '\x2', '\x2', '\x2', '\x5', 'S', '\x3', 
		'\x2', '\x2', '\x2', '\a', 'U', '\x3', '\x2', '\x2', '\x2', '\t', 'W', 
		'\x3', '\x2', '\x2', '\x2', '\v', 'Z', '\x3', '\x2', '\x2', '\x2', '\r', 
		'_', '\x3', '\x2', '\x2', '\x2', '\xF', '\x64', '\x3', '\x2', '\x2', '\x2', 
		'\x11', 'j', '\x3', '\x2', '\x2', '\x2', '\x13', 'n', '\x3', '\x2', '\x2', 
		'\x2', '\x15', 'p', '\x3', '\x2', '\x2', '\x2', '\x17', 'r', '\x3', '\x2', 
		'\x2', '\x2', '\x19', 't', '\x3', '\x2', '\x2', '\x2', '\x1B', 'v', '\x3', 
		'\x2', '\x2', '\x2', '\x1D', 'x', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'{', '\x3', '\x2', '\x2', '\x2', '!', '}', '\x3', '\x2', '\x2', '\x2', 
		'#', '\x80', '\x3', '\x2', '\x2', '\x2', '%', '\x82', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\x84', '\x3', '\x2', '\x2', '\x2', ')', '\x86', '\x3', '\x2', 
		'\x2', '\x2', '+', '\x88', '\x3', '\x2', '\x2', '\x2', '-', '\x8A', '\x3', 
		'\x2', '\x2', '\x2', '/', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\x90', '\x3', '\x2', '\x2', '\x2', '\x33', '\x92', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\x95', '\x3', '\x2', '\x2', '\x2', '\x37', '\x98', '\x3', 
		'\x2', '\x2', '\x2', '\x39', '\x9B', '\x3', '\x2', '\x2', '\x2', ';', 
		'\x9E', '\x3', '\x2', '\x2', '\x2', '=', '\xA1', '\x3', '\x2', '\x2', 
		'\x2', '?', '\xA4', '\x3', '\x2', '\x2', '\x2', '\x41', '\xA7', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\xAA', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\xAC', '\x3', '\x2', '\x2', '\x2', 'G', '\xAE', '\x3', '\x2', '\x2', 
		'\x2', 'I', '\xB5', '\x3', '\x2', '\x2', '\x2', 'K', '\xC0', '\x3', '\x2', 
		'\x2', '\x2', 'M', '\xCD', '\x3', '\x2', '\x2', '\x2', 'O', '\xD9', '\x3', 
		'\x2', '\x2', '\x2', 'Q', 'R', '\a', '=', '\x2', '\x2', 'R', '\x4', '\x3', 
		'\x2', '\x2', '\x2', 'S', 'T', '\a', '}', '\x2', '\x2', 'T', '\x6', '\x3', 
		'\x2', '\x2', '\x2', 'U', 'V', '\a', '\x7F', '\x2', '\x2', 'V', '\b', 
		'\x3', '\x2', '\x2', '\x2', 'W', 'X', '\a', 'k', '\x2', '\x2', 'X', 'Y', 
		'\a', 'h', '\x2', '\x2', 'Y', '\n', '\x3', '\x2', '\x2', '\x2', 'Z', '[', 
		'\a', 'g', '\x2', '\x2', '[', '\\', '\a', 'n', '\x2', '\x2', '\\', ']', 
		'\a', 'u', '\x2', '\x2', ']', '^', '\a', 'g', '\x2', '\x2', '^', '\f', 
		'\x3', '\x2', '\x2', '\x2', '_', '`', '\a', 'v', '\x2', '\x2', '`', '\x61', 
		'\a', 't', '\x2', '\x2', '\x61', '\x62', '\a', 'w', '\x2', '\x2', '\x62', 
		'\x63', '\a', 'g', '\x2', '\x2', '\x63', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'\x64', '\x65', '\a', 'h', '\x2', '\x2', '\x65', '\x66', '\a', '\x63', 
		'\x2', '\x2', '\x66', 'g', '\a', 'n', '\x2', '\x2', 'g', 'h', '\a', 'u', 
		'\x2', '\x2', 'h', 'i', '\a', 'g', '\x2', '\x2', 'i', '\x10', '\x3', '\x2', 
		'\x2', '\x2', 'j', 'k', '\a', 'x', '\x2', '\x2', 'k', 'l', '\a', '\x63', 
		'\x2', '\x2', 'l', 'm', '\a', 't', '\x2', '\x2', 'm', '\x12', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'o', '\a', '?', '\x2', '\x2', 'o', '\x14', '\x3', '\x2', 
		'\x2', '\x2', 'p', 'q', '\t', '\x2', '\x2', '\x2', 'q', '\x16', '\x3', 
		'\x2', '\x2', '\x2', 'r', 's', '\t', '\x3', '\x2', '\x2', 's', '\x18', 
		'\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', '\x61', '\x2', '\x2', 'u', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', '-', '\x2', '\x2', 
		'w', '\x1C', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '-', '\x2', '\x2', 
		'y', 'z', '\a', '-', '\x2', '\x2', 'z', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'{', '|', '\a', '/', '\x2', '\x2', '|', ' ', '\x3', '\x2', '\x2', '\x2', 
		'}', '~', '\a', '/', '\x2', '\x2', '~', '\x7F', '\a', '/', '\x2', '\x2', 
		'\x7F', '\"', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\a', ',', '\x2', 
		'\x2', '\x81', '$', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\a', 
		'\x31', '\x2', '\x2', '\x83', '&', '\x3', '\x2', '\x2', '\x2', '\x84', 
		'\x85', '\a', '*', '\x2', '\x2', '\x85', '(', '\x3', '\x2', '\x2', '\x2', 
		'\x86', '\x87', '\a', '+', '\x2', '\x2', '\x87', '*', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\a', '\x30', '\x2', '\x2', '\x89', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x8B', '\a', '(', '\x2', '\x2', '\x8B', 
		'\x8C', '\a', '(', '\x2', '\x2', '\x8C', '.', '\x3', '\x2', '\x2', '\x2', 
		'\x8D', '\x8E', '\a', '~', '\x2', '\x2', '\x8E', '\x8F', '\a', '~', '\x2', 
		'\x2', '\x8F', '\x30', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\a', 
		'#', '\x2', '\x2', '\x91', '\x32', '\x3', '\x2', '\x2', '\x2', '\x92', 
		'\x93', '\a', '\x31', '\x2', '\x2', '\x93', '\x94', '\a', '?', '\x2', 
		'\x2', '\x94', '\x34', '\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\a', 
		'/', '\x2', '\x2', '\x96', '\x97', '\a', '?', '\x2', '\x2', '\x97', '\x36', 
		'\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\a', ',', '\x2', '\x2', '\x99', 
		'\x9A', '\a', '?', '\x2', '\x2', '\x9A', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\x9B', '\x9C', '\a', '-', '\x2', '\x2', '\x9C', '\x9D', '\a', 
		'?', '\x2', '\x2', '\x9D', ':', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', 
		'\a', '?', '\x2', '\x2', '\x9F', '\xA0', '\a', '?', '\x2', '\x2', '\xA0', 
		'<', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA2', '\a', '#', '\x2', '\x2', 
		'\xA2', '\xA3', '\a', '?', '\x2', '\x2', '\xA3', '>', '\x3', '\x2', '\x2', 
		'\x2', '\xA4', '\xA5', '\a', '>', '\x2', '\x2', '\xA5', '\xA6', '\a', 
		'?', '\x2', '\x2', '\xA6', '@', '\x3', '\x2', '\x2', '\x2', '\xA7', '\xA8', 
		'\a', '@', '\x2', '\x2', '\xA8', '\xA9', '\a', '?', '\x2', '\x2', '\xA9', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xAB', '\a', '@', '\x2', 
		'\x2', '\xAB', '\x44', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\a', 
		'>', '\x2', '\x2', '\xAD', '\x46', '\x3', '\x2', '\x2', '\x2', '\xAE', 
		'\xAF', '\a', 'p', '\x2', '\x2', '\xAF', '\xB0', '\a', 'w', '\x2', '\x2', 
		'\xB0', '\xB1', '\a', 'n', '\x2', '\x2', '\xB1', '\xB2', '\a', 'n', '\x2', 
		'\x2', '\xB2', 'H', '\x3', '\x2', '\x2', '\x2', '\xB3', '\xB6', '\a', 
		'\x61', '\x2', '\x2', '\xB4', '\xB6', '\x5', '\x17', '\f', '\x2', '\xB5', 
		'\xB3', '\x3', '\x2', '\x2', '\x2', '\xB5', '\xB4', '\x3', '\x2', '\x2', 
		'\x2', '\xB6', '\xBC', '\x3', '\x2', '\x2', '\x2', '\xB7', '\xBB', '\a', 
		'\x61', '\x2', '\x2', '\xB8', '\xBB', '\x5', '\x17', '\f', '\x2', '\xB9', 
		'\xBB', '\x5', '\x15', '\v', '\x2', '\xBA', '\xB7', '\x3', '\x2', '\x2', 
		'\x2', '\xBA', '\xB8', '\x3', '\x2', '\x2', '\x2', '\xBA', '\xB9', '\x3', 
		'\x2', '\x2', '\x2', '\xBB', '\xBE', '\x3', '\x2', '\x2', '\x2', '\xBC', 
		'\xBA', '\x3', '\x2', '\x2', '\x2', '\xBC', '\xBD', '\x3', '\x2', '\x2', 
		'\x2', '\xBD', 'J', '\x3', '\x2', '\x2', '\x2', '\xBE', '\xBC', '\x3', 
		'\x2', '\x2', '\x2', '\xBF', '\xC1', '\x5', '\x15', '\v', '\x2', '\xC0', 
		'\xBF', '\x3', '\x2', '\x2', '\x2', '\xC1', '\xC2', '\x3', '\x2', '\x2', 
		'\x2', '\xC2', '\xC0', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC3', '\x3', 
		'\x2', '\x2', '\x2', '\xC3', '\xCB', '\x3', '\x2', '\x2', '\x2', '\xC4', 
		'\xC8', '\a', '\x30', '\x2', '\x2', '\xC5', '\xC7', '\x5', '\x15', '\v', 
		'\x2', '\xC6', '\xC5', '\x3', '\x2', '\x2', '\x2', '\xC7', '\xCA', '\x3', 
		'\x2', '\x2', '\x2', '\xC8', '\xC6', '\x3', '\x2', '\x2', '\x2', '\xC8', 
		'\xC9', '\x3', '\x2', '\x2', '\x2', '\xC9', '\xCC', '\x3', '\x2', '\x2', 
		'\x2', '\xCA', '\xC8', '\x3', '\x2', '\x2', '\x2', '\xCB', '\xC4', '\x3', 
		'\x2', '\x2', '\x2', '\xCB', '\xCC', '\x3', '\x2', '\x2', '\x2', '\xCC', 
		'L', '\x3', '\x2', '\x2', '\x2', '\xCD', '\xD3', '\t', '\x4', '\x2', '\x2', 
		'\xCE', '\xD2', '\n', '\x5', '\x2', '\x2', '\xCF', '\xD0', '\a', '^', 
		'\x2', '\x2', '\xD0', '\xD2', '\n', '\x6', '\x2', '\x2', '\xD1', '\xCE', 
		'\x3', '\x2', '\x2', '\x2', '\xD1', '\xCF', '\x3', '\x2', '\x2', '\x2', 
		'\xD2', '\xD5', '\x3', '\x2', '\x2', '\x2', '\xD3', '\xD1', '\x3', '\x2', 
		'\x2', '\x2', '\xD3', '\xD4', '\x3', '\x2', '\x2', '\x2', '\xD4', '\xD6', 
		'\x3', '\x2', '\x2', '\x2', '\xD5', '\xD3', '\x3', '\x2', '\x2', '\x2', 
		'\xD6', '\xD7', '\t', '\x4', '\x2', '\x2', '\xD7', 'N', '\x3', '\x2', 
		'\x2', '\x2', '\xD8', '\xDA', '\t', '\a', '\x2', '\x2', '\xD9', '\xD8', 
		'\x3', '\x2', '\x2', '\x2', '\xDA', '\xDB', '\x3', '\x2', '\x2', '\x2', 
		'\xDB', '\xD9', '\x3', '\x2', '\x2', '\x2', '\xDB', '\xDC', '\x3', '\x2', 
		'\x2', '\x2', '\xDC', '\xDD', '\x3', '\x2', '\x2', '\x2', '\xDD', '\xDE', 
		'\b', '(', '\x2', '\x2', '\xDE', 'P', '\x3', '\x2', '\x2', '\x2', '\f', 
		'\x2', '\xB5', '\xBA', '\xBC', '\xC2', '\xC8', '\xCB', '\xD1', '\xD3', 
		'\xDB', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
