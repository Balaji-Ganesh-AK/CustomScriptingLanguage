//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from DNEScrypt.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class DNEScryptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, True=8, False=9, 
		Var=10, Equals=11, Underscore=12, Add=13, Increment=14, Minus=15, Decrement=16, 
		Multiply=17, Divide=18, LeftParenthesis=19, RightParenthesis=20, Dot=21, 
		And=22, Or=23, Not=24, DivideEquals=25, SubEquals=26, MultiplyEquals=27, 
		AddEquals=28, DoubleEquals=29, NotEquals=30, LessOrEqual=31, GreaterOrEqual=32, 
		GreaterThan=33, LessThan=34, Null=35, Id=36, Number=37, String=38, WhiteSpace=39;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "True", "False", 
		"Var", "Equals", "Digit", "Letter", "Underscore", "Add", "Increment", 
		"Minus", "Decrement", "Multiply", "Divide", "LeftParenthesis", "RightParenthesis", 
		"Dot", "And", "Or", "Not", "DivideEquals", "SubEquals", "MultiplyEquals", 
		"AddEquals", "DoubleEquals", "NotEquals", "LessOrEqual", "GreaterOrEqual", 
		"GreaterThan", "LessThan", "Null", "Id", "Number", "String", "WhiteSpace"
	};


	public DNEScryptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DNEScryptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'{'", "'}'", "'if'", "'else'", "','", "':'", "'true'", "'false'", 
		"'var'", "'='", "'_'", "'+'", "'++'", "'-'", "'--'", "'*'", "'/'", "'('", 
		"')'", "'.'", "'&&'", "'||'", "'!'", "'/='", "'-='", "'*='", "'+='", "'=='", 
		"'!='", "'<='", "'>='", "'>'", "'<'", "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, "True", "False", "Var", 
		"Equals", "Underscore", "Add", "Increment", "Minus", "Decrement", "Multiply", 
		"Divide", "LeftParenthesis", "RightParenthesis", "Dot", "And", "Or", "Not", 
		"DivideEquals", "SubEquals", "MultiplyEquals", "AddEquals", "DoubleEquals", 
		"NotEquals", "LessOrEqual", "GreaterOrEqual", "GreaterThan", "LessThan", 
		"Null", "Id", "Number", "String", "WhiteSpace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DNEScrypt.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static DNEScryptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', ')', '\xE7', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', 
		'\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', 
		'\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', 
		'\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', 
		'\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', 
		'\x1F', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', 
		'!', '\x3', '\"', '\x3', '\"', '\x3', '\"', '\x3', '#', '\x3', '#', '\x3', 
		'#', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', '%', '\x3', '&', '\x3', 
		'&', '\x3', '&', '\x3', '&', '\x3', '&', '\x3', '\'', '\x3', '\'', '\x5', 
		'\'', '\xBE', '\n', '\'', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\a', 
		'\'', '\xC3', '\n', '\'', '\f', '\'', '\xE', '\'', '\xC6', '\v', '\'', 
		'\x3', '(', '\x6', '(', '\xC9', '\n', '(', '\r', '(', '\xE', '(', '\xCA', 
		'\x3', '(', '\x3', '(', '\a', '(', '\xCF', '\n', '(', '\f', '(', '\xE', 
		'(', '\xD2', '\v', '(', '\x5', '(', '\xD4', '\n', '(', '\x3', ')', '\x3', 
		')', '\x3', ')', '\x3', ')', '\a', ')', '\xDA', '\n', ')', '\f', ')', 
		'\xE', ')', '\xDD', '\v', ')', '\x3', ')', '\x3', ')', '\x3', '*', '\x6', 
		'*', '\xE2', '\n', '*', '\r', '*', '\xE', '*', '\xE3', '\x3', '*', '\x3', 
		'*', '\x3', '\xDB', '\x2', '+', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', 
		'\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', 
		'\v', '\x15', '\f', '\x17', '\r', '\x19', '\x2', '\x1B', '\x2', '\x1D', 
		'\xE', '\x1F', '\xF', '!', '\x10', '#', '\x11', '%', '\x12', '\'', '\x13', 
		')', '\x14', '+', '\x15', '-', '\x16', '/', '\x17', '\x31', '\x18', '\x33', 
		'\x19', '\x35', '\x1A', '\x37', '\x1B', '\x39', '\x1C', ';', '\x1D', '=', 
		'\x1E', '?', '\x1F', '\x41', ' ', '\x43', '!', '\x45', '\"', 'G', '#', 
		'I', '$', 'K', '%', 'M', '&', 'O', '\'', 'Q', '(', 'S', ')', '\x3', '\x2', 
		'\x6', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', 
		'|', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x5', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '\x2', '\xEE', '\x2', '\x3', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', 
		'\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x2', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x45', '\x3', '\x2', '\x2', '\x2', '\x2', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'I', '\x3', '\x2', '\x2', '\x2', '\x2', 'K', 
		'\x3', '\x2', '\x2', '\x2', '\x2', 'M', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x2', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'S', '\x3', '\x2', '\x2', '\x2', '\x3', 'U', '\x3', '\x2', '\x2', 
		'\x2', '\x5', 'W', '\x3', '\x2', '\x2', '\x2', '\a', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '\t', '[', '\x3', '\x2', '\x2', '\x2', '\v', '^', '\x3', 
		'\x2', '\x2', '\x2', '\r', '\x63', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'\x65', '\x3', '\x2', '\x2', '\x2', '\x11', 'g', '\x3', '\x2', '\x2', 
		'\x2', '\x13', 'l', '\x3', '\x2', '\x2', '\x2', '\x15', 'r', '\x3', '\x2', 
		'\x2', '\x2', '\x17', 'v', '\x3', '\x2', '\x2', '\x2', '\x19', 'x', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', 'z', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'|', '\x3', '\x2', '\x2', '\x2', '\x1F', '~', '\x3', '\x2', '\x2', '\x2', 
		'!', '\x80', '\x3', '\x2', '\x2', '\x2', '#', '\x83', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x85', '\x3', '\x2', '\x2', '\x2', '\'', '\x88', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x8A', '\x3', '\x2', '\x2', '\x2', '+', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '-', '\x8E', '\x3', '\x2', '\x2', '\x2', '/', '\x90', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x92', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x95', '\x3', '\x2', '\x2', '\x2', '\x35', '\x98', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x39', '\x9D', 
		'\x3', '\x2', '\x2', '\x2', ';', '\xA0', '\x3', '\x2', '\x2', '\x2', '=', 
		'\xA3', '\x3', '\x2', '\x2', '\x2', '?', '\xA6', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\xA9', '\x3', '\x2', '\x2', '\x2', '\x43', '\xAC', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\xAF', '\x3', '\x2', '\x2', '\x2', 'G', 
		'\xB2', '\x3', '\x2', '\x2', '\x2', 'I', '\xB4', '\x3', '\x2', '\x2', 
		'\x2', 'K', '\xB6', '\x3', '\x2', '\x2', '\x2', 'M', '\xBD', '\x3', '\x2', 
		'\x2', '\x2', 'O', '\xC8', '\x3', '\x2', '\x2', '\x2', 'Q', '\xD5', '\x3', 
		'\x2', '\x2', '\x2', 'S', '\xE1', '\x3', '\x2', '\x2', '\x2', 'U', 'V', 
		'\a', '=', '\x2', '\x2', 'V', '\x4', '\x3', '\x2', '\x2', '\x2', 'W', 
		'X', '\a', '}', '\x2', '\x2', 'X', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'Y', 'Z', '\a', '\x7F', '\x2', '\x2', 'Z', '\b', '\x3', '\x2', '\x2', 
		'\x2', '[', '\\', '\a', 'k', '\x2', '\x2', '\\', ']', '\a', 'h', '\x2', 
		'\x2', ']', '\n', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', 'g', '\x2', 
		'\x2', '_', '`', '\a', 'n', '\x2', '\x2', '`', '\x61', '\a', 'u', '\x2', 
		'\x2', '\x61', '\x62', '\a', 'g', '\x2', '\x2', '\x62', '\f', '\x3', '\x2', 
		'\x2', '\x2', '\x63', '\x64', '\a', '.', '\x2', '\x2', '\x64', '\xE', 
		'\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\a', '<', '\x2', '\x2', '\x66', 
		'\x10', '\x3', '\x2', '\x2', '\x2', 'g', 'h', '\a', 'v', '\x2', '\x2', 
		'h', 'i', '\a', 't', '\x2', '\x2', 'i', 'j', '\a', 'w', '\x2', '\x2', 
		'j', 'k', '\a', 'g', '\x2', '\x2', 'k', '\x12', '\x3', '\x2', '\x2', '\x2', 
		'l', 'm', '\a', 'h', '\x2', '\x2', 'm', 'n', '\a', '\x63', '\x2', '\x2', 
		'n', 'o', '\a', 'n', '\x2', '\x2', 'o', 'p', '\a', 'u', '\x2', '\x2', 
		'p', 'q', '\a', 'g', '\x2', '\x2', 'q', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'r', 's', '\a', 'x', '\x2', '\x2', 's', 't', '\a', '\x63', '\x2', '\x2', 
		't', 'u', '\a', 't', '\x2', '\x2', 'u', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'v', 'w', '\a', '?', '\x2', '\x2', 'w', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'x', 'y', '\t', '\x2', '\x2', '\x2', 'y', '\x1A', '\x3', '\x2', '\x2', 
		'\x2', 'z', '{', '\t', '\x3', '\x2', '\x2', '{', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '|', '}', '\a', '\x61', '\x2', '\x2', '}', '\x1E', '\x3', 
		'\x2', '\x2', '\x2', '~', '\x7F', '\a', '-', '\x2', '\x2', '\x7F', ' ', 
		'\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\a', '-', '\x2', '\x2', '\x81', 
		'\x82', '\a', '-', '\x2', '\x2', '\x82', '\"', '\x3', '\x2', '\x2', '\x2', 
		'\x83', '\x84', '\a', '/', '\x2', '\x2', '\x84', '$', '\x3', '\x2', '\x2', 
		'\x2', '\x85', '\x86', '\a', '/', '\x2', '\x2', '\x86', '\x87', '\a', 
		'/', '\x2', '\x2', '\x87', '&', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', 
		'\a', ',', '\x2', '\x2', '\x89', '(', '\x3', '\x2', '\x2', '\x2', '\x8A', 
		'\x8B', '\a', '\x31', '\x2', '\x2', '\x8B', '*', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8D', '\a', '*', '\x2', '\x2', '\x8D', ',', '\x3', '\x2', 
		'\x2', '\x2', '\x8E', '\x8F', '\a', '+', '\x2', '\x2', '\x8F', '.', '\x3', 
		'\x2', '\x2', '\x2', '\x90', '\x91', '\a', '\x30', '\x2', '\x2', '\x91', 
		'\x30', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\a', '(', '\x2', 
		'\x2', '\x93', '\x94', '\a', '(', '\x2', '\x2', '\x94', '\x32', '\x3', 
		'\x2', '\x2', '\x2', '\x95', '\x96', '\a', '~', '\x2', '\x2', '\x96', 
		'\x97', '\a', '~', '\x2', '\x2', '\x97', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\x98', '\x99', '\a', '#', '\x2', '\x2', '\x99', '\x36', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x9B', '\a', '\x31', '\x2', '\x2', '\x9B', 
		'\x9C', '\a', '?', '\x2', '\x2', '\x9C', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\x9D', '\x9E', '\a', '/', '\x2', '\x2', '\x9E', '\x9F', '\a', 
		'?', '\x2', '\x2', '\x9F', ':', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', 
		'\a', ',', '\x2', '\x2', '\xA1', '\xA2', '\a', '?', '\x2', '\x2', '\xA2', 
		'<', '\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\a', '-', '\x2', '\x2', 
		'\xA4', '\xA5', '\a', '?', '\x2', '\x2', '\xA5', '>', '\x3', '\x2', '\x2', 
		'\x2', '\xA6', '\xA7', '\a', '?', '\x2', '\x2', '\xA7', '\xA8', '\a', 
		'?', '\x2', '\x2', '\xA8', '@', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAA', 
		'\a', '#', '\x2', '\x2', '\xAA', '\xAB', '\a', '?', '\x2', '\x2', '\xAB', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\a', '>', '\x2', 
		'\x2', '\xAD', '\xAE', '\a', '?', '\x2', '\x2', '\xAE', '\x44', '\x3', 
		'\x2', '\x2', '\x2', '\xAF', '\xB0', '\a', '@', '\x2', '\x2', '\xB0', 
		'\xB1', '\a', '?', '\x2', '\x2', '\xB1', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\xB2', '\xB3', '\a', '@', '\x2', '\x2', '\xB3', 'H', '\x3', '\x2', 
		'\x2', '\x2', '\xB4', '\xB5', '\a', '>', '\x2', '\x2', '\xB5', 'J', '\x3', 
		'\x2', '\x2', '\x2', '\xB6', '\xB7', '\a', 'p', '\x2', '\x2', '\xB7', 
		'\xB8', '\a', 'w', '\x2', '\x2', '\xB8', '\xB9', '\a', 'n', '\x2', '\x2', 
		'\xB9', '\xBA', '\a', 'n', '\x2', '\x2', '\xBA', 'L', '\x3', '\x2', '\x2', 
		'\x2', '\xBB', '\xBE', '\a', '\x61', '\x2', '\x2', '\xBC', '\xBE', '\x5', 
		'\x1B', '\xE', '\x2', '\xBD', '\xBB', '\x3', '\x2', '\x2', '\x2', '\xBD', 
		'\xBC', '\x3', '\x2', '\x2', '\x2', '\xBE', '\xC4', '\x3', '\x2', '\x2', 
		'\x2', '\xBF', '\xC3', '\a', '\x61', '\x2', '\x2', '\xC0', '\xC3', '\x5', 
		'\x1B', '\xE', '\x2', '\xC1', '\xC3', '\x5', '\x19', '\r', '\x2', '\xC2', 
		'\xBF', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC0', '\x3', '\x2', '\x2', 
		'\x2', '\xC2', '\xC1', '\x3', '\x2', '\x2', '\x2', '\xC3', '\xC6', '\x3', 
		'\x2', '\x2', '\x2', '\xC4', '\xC2', '\x3', '\x2', '\x2', '\x2', '\xC4', 
		'\xC5', '\x3', '\x2', '\x2', '\x2', '\xC5', 'N', '\x3', '\x2', '\x2', 
		'\x2', '\xC6', '\xC4', '\x3', '\x2', '\x2', '\x2', '\xC7', '\xC9', '\x5', 
		'\x19', '\r', '\x2', '\xC8', '\xC7', '\x3', '\x2', '\x2', '\x2', '\xC9', 
		'\xCA', '\x3', '\x2', '\x2', '\x2', '\xCA', '\xC8', '\x3', '\x2', '\x2', 
		'\x2', '\xCA', '\xCB', '\x3', '\x2', '\x2', '\x2', '\xCB', '\xD3', '\x3', 
		'\x2', '\x2', '\x2', '\xCC', '\xD0', '\a', '\x30', '\x2', '\x2', '\xCD', 
		'\xCF', '\x5', '\x19', '\r', '\x2', '\xCE', '\xCD', '\x3', '\x2', '\x2', 
		'\x2', '\xCF', '\xD2', '\x3', '\x2', '\x2', '\x2', '\xD0', '\xCE', '\x3', 
		'\x2', '\x2', '\x2', '\xD0', '\xD1', '\x3', '\x2', '\x2', '\x2', '\xD1', 
		'\xD4', '\x3', '\x2', '\x2', '\x2', '\xD2', '\xD0', '\x3', '\x2', '\x2', 
		'\x2', '\xD3', '\xCC', '\x3', '\x2', '\x2', '\x2', '\xD3', '\xD4', '\x3', 
		'\x2', '\x2', '\x2', '\xD4', 'P', '\x3', '\x2', '\x2', '\x2', '\xD5', 
		'\xDB', '\a', '$', '\x2', '\x2', '\xD6', '\xD7', '\a', '^', '\x2', '\x2', 
		'\xD7', '\xDA', '\a', '$', '\x2', '\x2', '\xD8', '\xDA', '\n', '\x4', 
		'\x2', '\x2', '\xD9', '\xD6', '\x3', '\x2', '\x2', '\x2', '\xD9', '\xD8', 
		'\x3', '\x2', '\x2', '\x2', '\xDA', '\xDD', '\x3', '\x2', '\x2', '\x2', 
		'\xDB', '\xDC', '\x3', '\x2', '\x2', '\x2', '\xDB', '\xD9', '\x3', '\x2', 
		'\x2', '\x2', '\xDC', '\xDE', '\x3', '\x2', '\x2', '\x2', '\xDD', '\xDB', 
		'\x3', '\x2', '\x2', '\x2', '\xDE', '\xDF', '\a', '$', '\x2', '\x2', '\xDF', 
		'R', '\x3', '\x2', '\x2', '\x2', '\xE0', '\xE2', '\t', '\x5', '\x2', '\x2', 
		'\xE1', '\xE0', '\x3', '\x2', '\x2', '\x2', '\xE2', '\xE3', '\x3', '\x2', 
		'\x2', '\x2', '\xE3', '\xE1', '\x3', '\x2', '\x2', '\x2', '\xE3', '\xE4', 
		'\x3', '\x2', '\x2', '\x2', '\xE4', '\xE5', '\x3', '\x2', '\x2', '\x2', 
		'\xE5', '\xE6', '\b', '*', '\x2', '\x2', '\xE6', 'T', '\x3', '\x2', '\x2', 
		'\x2', '\f', '\x2', '\xBD', '\xC2', '\xC4', '\xCA', '\xD0', '\xD3', '\xD9', 
		'\xDB', '\xE3', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
